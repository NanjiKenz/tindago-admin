üéØ TindaGo Web Admin Design-to-Code Agent Examples

## Clean Figma-to-Code Conversion (No Image Extraction)

### Simple Activation (Admin Dashboard Figma Conversion):

@tindago-web-admin-design-to-code

Convert this Figma admin dashboard design to Next.js component:
https://www.figma.com/design/8I1Nr3vQZllDDknSevstvH/TindaGo-Admin?node-id=102-123&t=vt1DdLoecuG6NBUJ-4

Use exact positioning, design tokens CSS variables, and 1440x1024 baseline with 273px sidebar.

### Complex Request with Design Token Usage:

@tindago-web-admin-design-to-code

I need help with this Figma admin design:
https://www.figma.com/design/8I1Nr3vQZllDDknSevstvH/TindaGo-Admin?node-id=102-456

Requirements:
- Store registration approval dashboard with pixel-perfect positioning
- Use absolute positioning with exact Figma coordinates (x:308px, y:211px style)
- Apply design tokens from src/styles/design-tokens.css
- Use CSS variable utilities: .bg-active, .text-primary, .stats-card
- Firebase AdminService integration for real-time data
- 273px sidebar baseline without image dependencies

Create components using design token CSS variables.

### Positioning Error Fix Example:

@tindago-web-admin-design-to-code

I'm getting positioning issues with your previous solution:

The stats cards are not aligned properly. In Figma they are:
- Card 1: x:308px, y:211px, 270px wide
- Card 2: x:583px, y:211px, 270px wide
- Card 3: x:858px, y:211px, 270px wide
- Card 4: x:1133px, y:211px, 270px wide

But your code uses responsive grid instead of absolute positioning. Please fix with exact pixel coordinates and 275px spacing between cards.

### Design Token Usage Fix:

@tindago-web-admin-design-to-code

The styling doesn't use our design tokens properly. Please use:

Typography utilities:
- .text-dashboard-title (48px Clash Grotesk Variable)
- .text-card-value (28px weight 700)
- .text-card-title (14px weight 500)
- .text-primary, .text-secondary

Background utilities:
- .bg-dashboard (#F3F5F9)
- .bg-active (#0077BE)
- .bg-card (#FFFFFF)
- .bg-stat-purple, .bg-stat-green

Component utilities:
- .stats-card (270x150px with proper shadows)
- .nav-item with .active state
- .admin-dashboard-layout

Use CSS variables from src/styles/design-tokens.css instead of hardcoded values.

### Complete Dashboard Integration:

@tindago-web-admin-design-to-code

Create a complete admin dashboard from this Figma:
https://www.figma.com/design/8I1Nr3vQZllDDknSevstvH/TindaGo-Admin?node-id=281-115

Include:
- .admin-dashboard-layout container (1440x1024 baseline)
- .sidebar-container (273px width) using design tokens
- .stats-card components with exact Figma positioning
- .admin-header (80px height) with utility classes
- AdminService integration for Firebase real-time data
- CSS variable utilities from design-tokens.css
- No image extraction - layout and styling only

Make it match the existing dashboard components using our design token system.

## üöÄ Pro Tips for Best Results

### For Pixel-Perfect Conversion:

1. **Always provide exact Figma node URL** with specific node-id
2. **Specify coordinate precision**: "Use exact x:308px, y:211px positioning"
3. **Request Clash Grotesk Variable**: Never accept Inter or other fonts
4. **Demand exact colors**: Provide hex codes, not Tailwind approximations
5. **Asset path precision**: Specify `/public/images/admin-dashboard/` structure
6. **Reference existing patterns**: Mention your current dashboard implementation

### What the Agent Will Do:

‚úÖ **Extract exact Figma coordinates** and preserve them precisely
‚úÖ **Use design token CSS variables** from src/styles/design-tokens.css
‚úÖ **Use absolute positioning** with exact px values from Figma
‚úÖ **Apply utility classes** .bg-card, .text-primary, .stats-card
‚úÖ **Skip image extraction** - focus on layout and styling only
‚úÖ **Create pixel-perfect components** using design token system
‚úÖ **Integrate AdminService** for Firebase real-time data
‚úÖ **Follow 1440x1024 baseline** with 273px sidebar system

### Common Issues and Solutions:

**Issue**: Agent uses responsive classes instead of absolute positioning
**Solution**: Say "Use exact absolute positioning with pixel coordinates from Figma"

**Issue**: Agent doesn't use design tokens
**Solution**: Say "Use CSS variable utilities from src/styles/design-tokens.css"

**Issue**: Agent creates hardcoded styles
**Solution**: Say "Use .bg-card, .text-primary, .stats-card utility classes"

**Issue**: Agent tries to download images
**Solution**: Say "Skip image extraction, focus on layout and styling only"

**Issue**: Layout doesn't match dashboard
**Solution**: Say "Use .admin-dashboard-layout and design token system"

## Key Success Patterns

### ‚úÖ Perfect Agent Usage:
```
@tindago-web-admin-design-to-code

Convert this admin dashboard:
[Figma URL with node-id]

Use pixel-perfect positioning from Figma coordinates, design token CSS variables from src/styles/design-tokens.css, and utility classes. Skip image extraction. Match existing dashboard implementation with 273px sidebar and 1440x1024 baseline.
```

### ‚ùå Avoid Generic Requests:
```
@tindago-web-admin-design-to-code

Make a dashboard from this Figma link.
```

The agent specializes in **CLEAN FIGMA-TO-CODE CONVERSION** using design tokens and CSS variables, without image extraction complexity. Always specify design token usage for best results.

**Focus**: This agent converts admin dashboard Figma designs to Next.js components using the established design token system and pixel-perfect positioning.